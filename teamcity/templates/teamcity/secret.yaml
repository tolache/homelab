{{- $namespace := .Release.Namespace -}}
{{- $secretName := required "values.postgres.secretName must be set" .Values.postgres.secretName -}}
{{- $secret := (lookup "v1" "Secret" $namespace $secretName) -}}
{{- if not $secret }}{{ fail (printf "Secret %q not found in namespace %q" $secretName $namespace) }}{{- end -}}
{{- if not (hasKey $secret.data "POSTGRES_USER") }}{{ fail (printf "Secret %q missing key POSTGRES_USER" $secretName) }}{{- end -}}
{{- if not (hasKey $secret.data "POSTGRES_PASSWORD") }}{{ fail (printf "Secret %q missing key POSTGRES_PASSWORD" $secretName) }}{{- end -}}
{{- $user := (index $secret.data "POSTGRES_USER" | b64dec) -}}
{{- $pass := (index $secret.data "POSTGRES_PASSWORD" | b64dec) -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: database-properties
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "teamcity.labels" . | nindent 4 }}
type: Opaque
stringData:
  database.properties: |
    connectionUrl=jdbc:postgresql://postgres:5432/{{ .Values.postgres.database }}
    connectionProperties.user={{ $user }}
    connectionProperties.password={{ $pass }}
    maxConnections=50
    testOnBorrow=false
