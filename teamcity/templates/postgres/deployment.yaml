apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    {{- include "teamcity.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "teamcity.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "teamcity.labels" . | nindent 8 }}
        component: postgres
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: postgres
          image: "postgres:{{ .Values.postgres.imageTag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: POSTGRES_PASSWORD
          resources:
            requests:
              cpu: {{ .Values.postgres.resources.requests.cpu | quote }}
              memory: {{ .Values.postgres.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.postgres.resources.limits.cpu | quote }}
              memory: {{ .Values.postgres.resources.limits.memory | quote }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command: ["/bin/sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
          livenessProbe:
            exec:
              command: ["/bin/sh","-c","pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-data
